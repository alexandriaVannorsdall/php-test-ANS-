<?php

namespace Tests\Feature;

use Illuminate\Support\Facades\Http;
use Tests\TestCase;

class PokemonControllerTest extends TestCase
{
    /** @test */
    public function index_returns_successful_response_with_all_pokemons()
    {
        Http::fake([
            'https://pokeapi.co/api/v2/pokemon*' => Http::response(['results' => [
                ['name' => 'bulbasaur', 'url' => 'http://example.com/pokemon/1'],
                ['name' => 'ivysaur', 'url' => 'http://example.com/pokemon/2'],
                ['name' => 'venusaur', 'url' => 'http://example.com/pokemon/3'],
                ['name' => 'charmander', 'url' => 'http://example.com/pokemon/4'],
                ['name' => 'charmeleon', 'url' => 'http://example.com/pokemon/5'],
            ]], 200),
        ]);

        $response = $this->get(route('pokemon.index'));

        $response->assertStatus(200);
        $response->assertViewIs('pokemon.index');
        $response->assertViewHas('pokemons');
    }

    /** @test */
    public function index_returns_filtered_pokemons_based_on_search_query()
    {
        Http::fake([
            'https://pokeapi.co/api/v2/pokemon*' => Http::response(['results' => [
                ['name' => 'bulbasaur', 'url' => 'http://example.com/pokemon/1'],
                ['name' => 'ivysaur', 'url' => 'http://example.com/pokemon/2'],
            ]], 200),
        ]);

        $searchTerm = 'bulb';
        $response = $this->get(route('pokemon.index', ['search' => $searchTerm]));

        $response->assertStatus(200);
        $response->assertViewHas('pokemons', function ($viewPokemons) use ($searchTerm) {
            // Assert that the collection has been filtered based on search term
            return $viewPokemons->contains(function ($pokemon) use ($searchTerm) {
                return stripos($pokemon['name'], $searchTerm) !== false;
            });
        });
    }

    /** @test */
    public function show_returns_successful_response_with_specific_pokemon()
    {
        $pokemonName = 'bulbasaur';
        Http::fake([
            "https://pokeapi.co/api/v2/pokemon/{$pokemonName}" => Http::response([
                'name' => $pokemonName,
                'sprites' => [],
                // Include other necessary attributes
            ], 200),
        ]);

        $response = $this->get(route('pokemon.show', ['name' => $pokemonName]));

        $response->assertStatus(200);
        $response->assertViewIs('pokemon.show');
        $response->assertViewHas('pokemon', function ($viewPokemon) use ($pokemonName) {
            return $viewPokemon['name'] === $pokemonName;
        });
    }
}